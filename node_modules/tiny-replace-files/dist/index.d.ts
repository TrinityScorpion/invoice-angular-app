declare type Strings = string | string[];
declare type From = string | RegExp | FromCallback;
declare type To = string | ToCallback;
declare type FromCallback = (file: string) => string | RegExp | string[];
declare type ToCallback = (match: string, file: string) => string | string[];
interface OPTIONS_TYPES {
    files: Strings;
    from: From;
    to: To;
    freeze?: boolean;
    ignore?: string[];
    disableGlobs?: boolean;
    glob?: object;
    encoding?: BufferEncoding;
    countMatches?: boolean;
}

/**
 * Async main
 */
declare const replaceStringInFiles: (options: OPTIONS_TYPES) => any;
/**
 * Sync replaceStringInFiles
 */
declare const replaceStringInFilesSync: (options: OPTIONS_TYPES) => {
    file: any;
    matchCounts?: number;
    replaceCounts?: number;
    changed: boolean;
} | {
    file: any;
    matchCounts?: number;
    replaceCounts?: number;
    changed: boolean;
}[];

export { replaceStringInFiles as default, replaceStringInFiles, replaceStringInFilesSync };
