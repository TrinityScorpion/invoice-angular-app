var T=(e=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(e,{get:(n,r)=>(typeof require!="undefined"?require:n)[r]}):e)(function(e){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});import*as l from"fs";var d=T("fast-glob"),S=e=>{var i;let n={ignore:[],encoding:"utf-8",disableGlobs:!1,countMatches:!1,freeze:!1,glob:{}};if(typeof e!="object"||e===null)throw new Error("options type error");e.glob=(i=e.glob)!=null?i:{};let{files:r,from:t,to:s,ignore:o,encoding:c}=e;if(typeof r=="undefined")throw new Error("files type error");if(typeof t=="undefined")throw new Error("from type error");if(typeof s=="undefined")throw new Error("to type error");return Array.isArray(r)||(e.files=[r]),Array.isArray(o)||(e.ignore=o?[o]:[]),c||(e.encoding="utf-8"),Object.assign({},n,e)},h=(e,n)=>{let{ignore:r,disableGlobs:t,glob:s}=n;return t?Promise.resolve(e):F(e,r,s)},m=(e,n)=>{let{ignore:r,disableGlobs:t,glob:s}=n;return t?e:x(e,r,s)},F=(e,n,r)=>(r=Object.assign({ignore:n,nodir:!0},r),d(e,r)),x=(e,n,r)=>(r=Object.assign({ignore:n,nodir:!0},r),d.sync(e,r)),p=(e,n,r,t,s)=>{let o={file:t,changed:!1},c=n;if(typeof n=="function"&&(c=n(t)),typeof c=="string"&&(c=new RegExp(c,"g")),s){let a=e.match(c);if(a){let f=a.filter(g=>g!==r);o.matchCounts=a.length,o.replaceCounts=f.length}}let i=e.replace(c,r);return o.changed=i!==e,{result:o,newContents:i}},O=(e,n)=>{let{from:r,to:t,encoding:s,freeze:o,countMatches:c}=n;return new Promise((i,a)=>{l.readFile(e,{encoding:s},(f,g)=>{if(f)return a(f);let{result:u,newContents:b}=p(g,r,t,e,c);if(!u.changed||o)return i(u);l.writeFile(e,b,s,P=>{if(P)return a(P);i(u)})})})},y=(e,n)=>{let{from:r,to:t,encoding:s,freeze:o,countMatches:c}=n,i=l.readFileSync(e,s),{result:a,newContents:f}=p(i,r,t,e,c);return!a.changed||o||l.writeFileSync(e,f,s),a};var I=e=>{try{e=S(e)}catch(t){return Promise.reject(t)}let{files:n,freeze:r}=e;return r&&console.warn("running in freeze mode, no change..."),h(n,e).then(t=>Promise.all(t.map(s=>O(s,e))))},_=e=>{e=S(e);let{files:n,freeze:r}=e,t=m(n,e);return r&&console.warn("running in freeze mode, no change..."),Array.isArray(t)?t.map(s=>y(s,e)):y(t,e)},z=I;export{z as default,I as replaceStringInFiles,_ as replaceStringInFilesSync};
